import { t } from '$trpc/init';
import { z } from 'zod';

import db from './db';

export default t.router({
	db,
	welcome: t.procedure.query(function ({ ctx }) {
		return ctx.welcome;
	}),
	welcomeName: t.procedure.input(z.string().min(3)).query(async function ({ input: name }) {
		await sleep(0.5, 2);
		if (name === 'error') {
			throw t.error(`${name} is not a valid name`);
		}
		return `Welcome ${name}`;
	})
});

export function sleep(tMin: number, tMax?: number, inS: boolean = true) {
	tMin = tMin * (inS ? 1000 : 1);
	tMax = tMax ? tMax * (inS ? 1000 : 1) : undefined;
	const ms =
		tMax !== undefined && tMax > tMin ? Math.floor(Math.random() * (tMax - tMin + 1)) + tMin : tMin;
	return new Promise((resolve) => {
		setTimeout(resolve, ms);
	});
}
